== Configuration

deprec2 has a two stage process for generating/deploying configuration files.
Configuration files for web, app, db servers (and more) are generated from 
templates and put under the config/ tree in your Rails apps source tree. 
Alternatively you could create a non-rails-app tree to hold them. The second 
stage is pushing the files out to the destination servers. This used to be a 
one stage process in deprec1 however the change has been made so that:

- all config files for a project can be kept under source control
- you can make changes to config files that are not available through deprec

Many of the settings in these config files are based on values in the projects 
deploy.rb file. Others reflect defaults in deprec that you can override by adding 
fields to deploy.rb. This means you may never need to edit the generated config 
files directly. You can generate a set of config files with the following:

	cap deprec:nginx:config_gen # generates config files for trac from templates
	
config_gen is re-runnable and will prompt you before overwriting a file. It will
also show you what changes overwriting would make (in diff format) to help you
decide whether you want it to do so.

Changes to service configuration should never be made on the server. Deprec 
acknowledges this by offering no assistance to people who want to copy config 
files back from servers. But pushing the files out couldn't be simpler!

	cap deprec:nginx:config # pushes out all config files for nginx

deprec2 takes into consideration the fact that that some services are used to 
host more than one application. For example, a webserver will often have one 
main configuration and a number of virtual host configurations. Monit has a
single config file (/etc/monitrc) but will also load other configs it finds in
a certain directory (/etc/monit.d).

When you deploy a Ruby on Rails app with deprec it drops configs for your project
into the config/ directory for your project and symlinks them into a shared path
on the server. This means you can install multiple apps on a remote server and 
they shouldn't stop on each other. 